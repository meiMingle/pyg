<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
                            http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <security:http pattern="/shoplogin.html" security="none"></security:http>
    <security:http pattern="/favicon.ico" security="none"></security:http>
    <security:http pattern="/register.html" security="none"></security:http>
    <security:http pattern="/css/**" security="none"></security:http>
    <security:http pattern="/img/**" security="none"></security:http>
    <security:http pattern="/js/**" security="none"></security:http>
    <security:http pattern="/plugins/**" security="none"></security:http>
    <security:http pattern="/seller/add" security="none"></security:http>
    <!-- 配置拦截的规则 auto-config="使用自带的页面" use-expressions="是否使用spel表达式"，如果使用表达式：hasRole('ROLE_USER') -->
    <security:http auto-config="true" use-expressions="false">
        <!-- 配置拦截的请求地址，任何请求地址都必须有ROLE_USER的权限 -->
        <security:intercept-url pattern="/**" access="ROLE_SELLER"/>
        <!-- 配置自定义的页面跳转
                login-page:设置登录界面
                login-processing-url：设置登录请求地址
                default-target-url：指定成功进行身份验证和授权后默认呈现给用户的页面。
                authentication-failure-url：登录失败跳转界面
                always-use-default-target：指定了是否在身份验证通过后总是跳转到default-target-url属性指定的URL。
         -->
        <security:form-login
                login-page="/shoplogin.html"
                login-processing-url="/login"
                default-target-url="/admin/index.html"
                authentication-failure-url="/shoplogin.html"
                always-use-default-target="true"
        />
        <!-- 关闭跨越请求 ：如果要自定义界面，必须关闭此功能-->
        <security:csrf disabled="true"/>
        <!-- 使用了frame需要设置frame策略为同源 -->
        <security:headers>
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>
        <!-- 退出 -->
        <security:logout invalidate-session="true" logout-url="/logout" logout-success-url="/shoplogin.html"/>
    </security:http>
    <!-- 提供用户名和密码的数据 -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userDetailService"><!--引入自定义认证-->

            <!--BCrypt加密工具引入-->
            <security:password-encoder ref="bCryptPasswordEncoder"/>

            <!--
                        &lt;!&ndash;在内存中临时提供用户名和密码的数据&ndash;&gt;
                        <security:user-service>
                            <security:user name="admin" password="admin" authorities="ROLE_ADMIN" />
                            <security:user name="user" password="user" authorities="ROLE_ADMIN"/>
                        </security:user-service>
            -->
        </security:authentication-provider>
    </security:authentication-manager>
    <!--dubbo相关配置-->
    <dubbo:application name="pinyougou-shop-web"/>
    <dubbo:registry address="zookeeper://192.168.25.138:2181"/>
    <dubbo:reference id="sellerService" interface="com.pinyougou.sellergoods.service.SellerService"/>
    <bean id="userDetailService" class="com.pinyougou.shop.service.UserDetailServiceImpl">
        <!--通过dubbo将sellerService注入到userDetailService-->
        <property name="sellerService" ref="sellerService"/>
    </bean>

    <!--注入BCrypt密码加密器-->
    <bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

</beans>